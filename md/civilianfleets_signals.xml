<?xml version="1.0" encoding="utf-8" ?>

<!--
Remember guys, this is an MD script.
You gotta pick the variables back up after usage!
-->
<mdscript name="CivilianFleets_Signals" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="md.xsd">
    <cues>
        <cue name="SignalConfigurationControl" instantiate="true" version="2">
            <conditions>
                <!-- Whatever happens, when the player enters the game state, set up the variables. -->
                <event_cue_signalled cue="md.Setup.Start" />
            </conditions>
            <actions>
                <set_value name="global.$v1024_symbols_shipDocked" value="'ship docked'" />
                <set_value name="global.$v1024_symbols_requestOrderSync" value="'requesting order sync'" />
                <set_value name="global.$v1024_symbols_requestUpdateWingName" value="'requesting update wing name'" />
            </actions>
        </cue>

        <!--
        Given two ships, copies the civilian default order of one ship to the other ship.
        The type of order to sync depends on the assignment.
            param1 = That Characteristic Symbol
            param2 = fromShip
            param3 = toShip
        -->
        <cue name="Signal_SyncOrders" instantiate="true">
            <conditions>
                <event_object_signalled object="player.galaxy" param="global.$v1024_symbols_requestOrderSync" />
            </conditions>
            <delay min="100ms" max="5000ms" comment="Delay randomly to spread out the performance spike." />
            <actions>
                <set_value name="$fromShip" exact="event.param2" />
                <set_value name="$toShip" exact="event.param3" />

                <do_if value="$fromShip == null or $toShip == null">
                    <show_help custom="'Source and/or target be null! Cannot sync!'" position="1" duration="3s" chance="0" />
                    <remove_value name="$fromShip" />
                    <remove_value name="$toShip" />
                    <cancel_cue cue="this" />
                </do_if>

                <!--
                <show_help custom="'Tryna sync from ' + $fromShip.knownname + ' to ' + $toShip.knownname" position="1" duration="3s" />
                -->

                <do_if value="not $fromShip.isclass.ship">
                    <show_help custom="'Source is not a ship! Improper action.'" position="1" duration="3s" chance="0" />
                    <remove_value name="$fromShip" />
                    <remove_value name="$toShip" />
                    <cancel_cue cue="this" />
                </do_if>
                <do_if value="not $toShip.isclass.ship">
                    <show_help custom="'Target is not a ship! Improper action.'" position="1" duration="3s" chance="0" />
                    <remove_value name="$fromShip" />
                    <remove_value name="$toShip" />
                    <cancel_cue cue="this" />
                </do_if>

                <!--show_help custom="'Syncing orders from ' + $fromShip.knownname + ' to ' + $toShip.knownname" position="1" duration="4s" /-->

                <!-- Caching to allow faster script execution. -->
                <set_value name="$assignmentSkillLevel" exact="[$fromShip.pilot.skill.management, $toShip.pilot.skill.piloting].max / 3" comment="The 'skill level' designated by vanilla game, if it were to assign a ship to a station." />
                <set_value name="$fromShip_DefaultOrder" exact="$fromShip.defaultorder" />
                <set_value name="$toShip_DefaultOrder" exact="$toShip.defaultorder" />
                <set_value name="$haveSameDefaultOrder" exact="$fromShip_DefaultOrder.id == $toShip_DefaultOrder.id" comment="Actually set default orders when orders are different, otherwise just update the values." />

                <!--
                Note to self:
                Suppose the Commander is operating at Skill Level 2. (Denoted as SL-2)
                There exists cases where the joining ship can operate at (e.g.) SL-5.
                    In such cases, set the joining ship to operate at SL-2, same as Commander. It's natural.
                There also exists cases where the joining ship can only operate at (e.g.) SL-1 (or even lower).
                    This can occur when the Commander has exceptionally crappy Management skill, and the Subordinate having crappy Piloting skill too.
                    (This does not guarantee that the Commander also has crappy Piloting skill! Overall skill can still be good!)
                    The UI will explode if we attempt to set it to SL-2, so in such cases, set it at SL-1 (i.e., max capable).
                -->

                <!--
                State diagram and default orders:
                The <create order default="true" /> node signals the game to change the default order of the ship.
                There were some time where I was worried that the node would affect the existing behavior of ships.
                But as it turns out, that fear was unnecessary.
                    We know that ships will execute orders if there are any on the order list
                    This means that they will be in "execute order" state most of the time.
                    But when there aren't any more orders to be executed, the ship will fall back to the "execute default order" state
                    And the trick is, the XML node only changes the details of the "default order" state, not the state itself
                    That is, there are still only two states. The system can still function.
                Still, as part of the documentation efforts, I will keep the <edit_order_param /> nodes somewhere else in the file
                to let others learn what can be done.

                The following two XML nodes signal the game to modify the "order" object denoted by $toShip_DefaultOrder .
                Specifically, the parameters with names "maxbuy" and "maxsell" are modified to become the new value in the VALUE parameter
                Runtime error will result when you attempt to modify a parameter that does not exist. The script will crash and be skipped.
                Runtime error *may* result when you attempt to modify the order itself. Refer to /libraries/common.xsd in your X4 source files for more details.

                <edit_order_param order="$toShip_DefaultOrder" param="'maxbuy'" value="$maxBuy" />
                <edit_order_param order="$toShip_DefaultOrder" param="'maxsell'" value="$maxSell" />
                -->
                <do_if value="$toShip.assignment == assignment.mining or ((not global.$v1024_flags_hasRightClickAPI) and $fromShip.primarypurpose == purpose.mine and $toShip.primarypurpose == purpose.mine)">
                    <show_help position="1" duration="1s" custom="'Mining! ' + $fromShip.name + ' -> ' + $toShip.name" chance="0"/>
                    <do_if value="not global.$v1024_flags_hasRightClickAPI" comment="Fallback mode code">
                        <set_object_commander object="$toShip" commander="$fromShip" assignment="assignment.mining"/>
                    </do_if>
                    <!-- Even though there are several different versions of mining scripts, they all have the same list of parameters. -->
                    <set_value name="$inputOrder" exact="$fromShip_DefaultOrder" />
                    <include_actions ref="CheckOrderIsMining" comment="Returns $isMiningOrder, consumes $inputOrder; determines whether the given order is one of the several vanilla mining orders." />

                    <do_if value="$isMiningOrder">
                        <!-- Vanilla * AutoMine behavior -->

                        <!-- We first need to check for Expert AutoMine: they are using yet another way of calculating the skill level -->
                        <do_if value="$fromShip_DefaultOrder.id == 'MiningRoutine_Expert'">
                            <set_value name="$assignmentSkillLevel" exact="[$fromShip.pilot.skill.management, $toShip.pilot.skill.piloting].max" />
                        </do_if>

                        <!-- First obtain the MAX parameters, cap them to valid values. -->
                        <set_value name="$maxBuy" exact="[$fromShip_DefaultOrder.$maxbuy, $assignmentSkillLevel].min" />
                        <set_value name="$maxSell" exact="[$fromShip_DefaultOrder.$maxsell, $assignmentSkillLevel].min" />

                        <!-- Then obtain and cap the MIN parameters -->
                        <set_value name="$minBuy" exact="[$fromShip_DefaultOrder.$minbuy, $maxBuy].min" />
                        <set_value name="$minSell" exact="[$fromShip_DefaultOrder.$minsell, $maxSell].min" />

                        <!-- As to the 'effective skill' parameter... -->
                        <!-- ge: greater than or equal to -->
                        <set_value name="$combinedSkill" />
                        <do_if value="$fromShip.combinedskill ge $toShip.combinedskill">
                            <!-- If commander is better than subordinate, subordinate can do it themselves. -->
                            <set_value name="$combinedSkill" exact="$toShip.combinedskill"/>
                        </do_if>
                        <do_else>
                            <!-- Take average otherwise. -->
                            <set_value name="$combinedSkill" exact="($fromShip.combinedskill + $toShip.combinedskill) / 2"/>
                        </do_else>

                        <!-- Fixing the ware basket for Sector AutoMine: weak typing hides the difference between arrays and objects. -->
                        <set_value name="$wareBasket" exact="$fromShip_DefaultOrder.$warebasket" />
                        <do_if value="not @$wareBasket.count">
                            <!-- .count cannot be accessed, meaning that this is an object. -->
                            <!-- "Cast" it back to an array with 1 objects. -->
                            <set_value name="$wareBasket" exact="[$wareBasket]"/>
                        </do_if>

                        <create_order object="$toShip" id="'MiningRoutine'" default="true">
                            <!-- In v2.5, only maxbuy and maxsell can be modified by the user. -->
                            <!-- Hence, configuring minbuy and minsell becomes meaningless. -->
                            <param name="warebasket" value="$wareBasket" />
                            <param name="range" value="$fromShip_DefaultOrder.$range" />
                            <param name="minbuy" value="$minBuy" />
                            <param name="minsell" value="$minSell" />
                            <param name="maxbuy" value="$maxBuy" />
                            <param name="maxsell" value="$maxSell" />
                            <param name="effectiveskill" value="$combinedSkill" />
                        </create_order>
                        <set_order_syncpoint_reached order="$toShip.order"/>

                        <!-- Out of scope variable removal -->
                        <remove_value name="$minBuy" />
                        <remove_value name="$minSell" />
                        <remove_value name="$maxBuy" />
                        <remove_value name="$maxSell" />
                        <remove_value name="$combinedSkill" />
                    </do_if>
                    <do_elseif value="$fromShip_DefaultOrder.id == 'RandomMine'" chance="0">
                        <!-- RandomMine fleet -->
                        <!-- RandomMine has their own "assignment skill level"; updating the variable to reflect that. -->
                        <set_value name="$assignmentSkillLevel" exact="$toShip.pilot.skill.piloting * 2" />
                        <set_value name="$maxMine" exact="[$fromShip_DefaultOrder.$maxMine, $assignmentSkillLevel].min" />
                        <set_value name="$maxSell" exact="[$fromShip_DefaultOrder.$maxSell, $assignmentSkillLevel].min" />
                        <set_value name="$maxServe" exact="[$fromShip_DefaultOrder.$maxServe, $assignmentSkillLevel].min" />

                        <create_order object="$toShip" id="'RandomMine'" default="true" chance="0">
                            <!-- Section 1: basic parameters -->
                            <param name="supplier" value="$fromShip_DefaultOrder.$supplier" />
                            <param name="freeMiner" value="$fromShip_DefaultOrder.$freeMiner" />
                            <param name="home" value="$fromShip_DefaultOrder.$home" />
                            <param name="homeBound" value="$fromShip_DefaultOrder.$homeBound" />
                            <param name="maxMine" value="$maxBuy" />
                            <param name="maxSell" value="$maxSell" />
                            <param name="maxServe" value="$maxServe" />
                            <!-- Section 2: ware baskets -->
                            <param name="wareBasket" value="$fromShip_DefaultOrder.$wareBasket" />
                            <param name="allWares" value="$fromShip_DefaultOrder.$allWares" />
                            <!-- Section 3: stock levels and profit levels -->
                            <param name="stockRatioToMine" value="$fromShip_DefaultOrder.$stockRatioToMine" />
                            <!-- Section 4: faction ban-lists -->
                            <param name="allowAllFactions" value="$fromShip_DefaultOrder.$allowAllFactions" />
                            <param name="allowPlayer" value="$fromShip_DefaultOrder.$allowPlayer" />
                            <param name="allowArgon" value="$fromShip_DefaultOrder.$allowArgon" />
                            <param name="allowAntigone" value="$fromShip_DefaultOrder.$allowAntigone" />
                            <param name="allowTeladi" value="$fromShip_DefaultOrder.$allowTeladi" />
                            <param name="allowMinistry" value="$fromShip_DefaultOrder.$allowMinistry" />
                            <param name="allowParanid" value="$fromShip_DefaultOrder.$allowParanid" />
                            <param name="allowHolyOrder" value="$fromShip_DefaultOrder.$allowHolyOrder" />
                            <param name="allowAlliance" value="$fromShip_DefaultOrder.$allowAlliance" />
                            <param name="allowHatikvah" value="$fromShip_DefaultOrder.$allowHatikvah" />
                            <param name="allowScaleplate" value="$fromShip_DefaultOrder.$allowScaleplate" />
                        </create_order>
                        <set_order_syncpoint_reached order="$toShip.order"/>

                        <!-- Out-of-scope variable removal -->
                        <remove_value name="$maxMine" />
                        <remove_value name="$maxSell" />
                        <remove_value name="$maxServe" />
                    </do_elseif>
                    <do_else>
                        <!-- Fallback case: probably an incorrect assignment. -->
                        <!-- The player is responsible for checking the correctness of assignments and make corrections. -->
                        <create_order object="$object" id="'Follow'" default="true">
                            <param name="target" value="$commander" />
                        </create_order>
                    </do_else>
                </do_if>
                <do_elseif value="$toShip.assignment == assignment.trade or ((not global.$v1024_flags_hasRightClickAPI) and $fromShip.primarypurpose == purpose.trade and $toShip.primarypurpose == purpose.trade)">
                    <show_help position="1" duration="1s" custom="'Trading! ' + $fromShip.name + ' -> ' + $toShip.name" chance="0"/>
                    <do_if value="not global.$v1024_flags_hasRightClickAPI" comment="Fallback mode code">
                        <set_object_commander object="$toShip" commander="$fromShip" assignment="assignment.trade"/>
                    </do_if>
                    <!-- Make sure the fromShip really is trading -->
                    <do_if value="$fromShip_DefaultOrder.id == 'TradeRoutine'">
                        <!-- Vanilla AutoTrade behavior -->
                        <set_value name="$maxBuy" exact="[$fromShip_DefaultOrder.$maxbuy, $assignmentSkillLevel].min" />
                        <set_value name="$maxSell" exact="[$fromShip_DefaultOrder.$maxsell, $assignmentSkillLevel].min" />

                        <do_if value="$haveSameDefaultOrder">
                            <edit_order_param order="$toShip_DefaultOrder" param="'warebasket'" value="$fromShip_DefaultOrder.$warebasket" />
                            <edit_order_param order="$toShip_DefaultOrder" param="'range'" value="$fromShip_DefaultOrder.$range" />
                            <edit_order_param order="$toShip_DefaultOrder" param="'maxbuy'" value="$maxBuy" />
                            <edit_order_param order="$toShip_DefaultOrder" param="'maxsell'" value="$maxSell" />
                        </do_if>
                        <do_else>
                             <create_order object="$toShip" id="'TradeRoutine'" default="true">
                                <!-- In v2.5, only maxbuy and maxsell can be modified by the user. -->
                                <!-- Hence, configuring minbuy and minsell becomes meaningless. -->
                                <param name="warebasket" value="$fromShip_DefaultOrder.$warebasket" />
                                <param name="range" value="$fromShip_DefaultOrder.$range" />
                                <param name="maxbuy" value="$maxBuy" />
                                <param name="maxsell" value="$maxSell" />
                            </create_order>
                            <set_order_syncpoint_reached order="$toShip.order"/>
                        </do_else>

                        <!-- Out of scope variable removal -->
                        <remove_value name="$maxBuy" />
                        <remove_value name="$maxSell" />
                    </do_if>
                    <do_elseif value="$fromShip_DefaultOrder.id == 'Middleman'">
                        <!-- Vanilla Distribute Wares behavior -->
                        <do_if value="$haveSameDefaultOrder">
                            <edit_order_param order="$toShip_DefaultOrder" param="'warebasket'" value="$fromShip_DefaultOrder.$warebasket" />
                            <edit_order_param order="$toShip_DefaultOrder" param="'anchorspace'" value="$fromShip_DefaultOrder.$anchorspace" />
                        </do_if>
                        <do_else>
                            <create_order object="$toShip" id="'Middleman'" default="true">
                                <!-- In v2.5, only warebasket can be modified by the player. -->
                                <param name="warebasket" value="$fromShip_DefaultOrder.$warebasket" />
                                <param name="anchorspace" value="$fromShip_DefaultOrder.$anchorspace" />
                            </create_order>
                            <set_order_syncpoint_reached order="$toShip.order"/>
                        </do_else>
                    </do_elseif>
                    <do_elseif value="$fromShip_DefaultOrder.id == 'TaterTrade'">
                        <!-- Mod TaterTrade: TaterTrade behavior -->
                        <!-- TaterTrade has their own "assignment skill level"; updating the variable to reflect that. -->
                        <set_value name="$assignmentSkillLevel" exact="[$fromShip.pilot.skill.management, $toShip.pilot.skill.piloting].max * 2" />
                        <set_value name="$maxBuy" exact="[$fromShip_DefaultOrder.$maxbuy, $assignmentSkillLevel].min" />
                        <set_value name="$maxSell" exact="[$fromShip_DefaultOrder.$maxsell, $assignmentSkillLevel].min" />

                        <!-- Wow, there's a lot of parameters here... -->
                        <create_order object="$toShip" id="'TaterTrade'" default="true">
                            <!-- Section break 0: General config -->
                            <param name="home" value="$fromShip_DefaultOrder.$home" />
                            <param name="returnhome" value="$fromShip_DefaultOrder.$returnhome" />
                            <param name="maxbuy" value="$maxBuy" />
                            <param name="maxsell" value="$maxSell" />
                            <param name="distancecheck" value="$fromShip_DefaultOrder.$distancecheck" />
                            <param name="discount" value="$fromShip_DefaultOrder.$discount" />
                            <param name="discount2" value="$fromShip_DefaultOrder.$discount2" />
                            <param name="bypass" value="$fromShip_DefaultOrder.$bypass" />
                            <param name="fasttrade" value="$fromShip_DefaultOrder.$fasttrade" />
                            <param name="stationmode" value="$fromShip_DefaultOrder.$stationmode" />
                            <param name="blackmarket" value="$fromShip_DefaultOrder.$blackmarket" />
                            <!-- Section break 1: Trade ware config -->
                            <param name="warebasket" value="$fromShip_DefaultOrder.$warebasket" />
                            <param name="usepresets" value="$fromShip_DefaultOrder.$usepresets" />
                            <param name="allwares" value="$fromShip_DefaultOrder.$allwares" />
                            <param name="legalwares" value="$fromShip_DefaultOrder.$legalwares" />
                            <param name="illegalwares" value="$fromShip_DefaultOrder.$illegalwares" />
                            <param name="shipbuildingwares" value="$fromShip_DefaultOrder.$shipbuildingwares" />
                            <param name="stationbuildingwares" value="$fromShip_DefaultOrder.$stationbuildingwares" />
                            <param name="hightechwares" value="$fromShip_DefaultOrder.$hightechwares" />
                            <param name="refinedwares" value="$fromShip_DefaultOrder.$refinedwares" />
                            <param name="biowares" value="$fromShip_DefaultOrder.$biowares" />
                            <!-- Section break 2: Sector Black/White Lists -->
                            <param name="excludedsectors" value="$fromShip_DefaultOrder.$excludedsectors" />
                            <param name="includedsectors" value="$fromShip_DefaultOrder.$includedsectors" />
                            <!-- Section break 3: Trading partner blacklists -->
                            <param name="enablebans" value="$fromShip_DefaultOrder.$enablebans" />
                            <param name="playerban" value="$fromShip_DefaultOrder.$playerban" />
                            <param name="argonban" value="$fromShip_DefaultOrder.$argonban" />
                            <param name="antigoneban" value="$fromShip_DefaultOrder.$antigoneban" />
                            <param name="teladiban" value="$fromShip_DefaultOrder.$teladiban" />
                            <param name="ministryban" value="$fromShip_DefaultOrder.$ministryban" />
                            <param name="paranidban" value="$fromShip_DefaultOrder.$paranidban" />
                            <param name="holyorderban" value="$fromShip_DefaultOrder.$holyorderban" />
                            <param name="allianceban" value="$fromShip_DefaultOrder.$allianceban" />
                            <param name="hatikvahban" value="$fromShip_DefaultOrder.$hatikvahban" />
                            <param name="scaleplateban" value="$fromShip_DefaultOrder.$scaleplateban" />
                            <!-- Section break 4: Miscellaneous-->
                            <param name="scanspeed" value="$fromShip_DefaultOrder.$scanspeed" />
                        </create_order>
                        <set_order_syncpoint_reached order="$toShip.order"/>

                        <!-- Out of scope variable removal -->
                        <remove_value name="$maxBuy" />
                        <remove_value name="$maxSell" />
                    </do_elseif>
                    <do_elseif value="$fromShip_DefaultOrder.id == 'DistriMule'">
                        <!-- Mod Mules & Warehouses: Distribution Mule behavior -->
                        <create_order object="$toShip" id="'DistriMule'" default="true">
                            <param name="sourceStation" value="$fromShip_DefaultOrder.$sourceStation" />
                            <param name="minStorage" value="$fromShip_DefaultOrder.$minStorage" />
                            <param name="staticStorage" value="$fromShip_DefaultOrder.$staticStorage" />
                            <param name="maxStorage" value="$fromShip_DefaultOrder.$maxStorage" />
                            <param name="specialWareBasket" value="$fromShip_DefaultOrder.$specialWareBasket" />
                            <param name="destList" value="$fromShip_DefaultOrder.$destList" />
                        </create_order>
                        <set_order_syncpoint_reached order="$toShip.order"/>
                    </do_elseif>
                    <do_elseif value="$fromShip_DefaultOrder.id == 'StationMule'">
                        <!-- Mod Mules & Warehouses: Station Mule behavior -->
                        <create_order object="$toShip" id="'StationMule'" default="true">
                            <param name="sourceStation" value="$fromShip_DefaultOrder.$sourceStation" />
                            <param name="targetStation" value="$fromShip_DefaultOrder.$targetStation" />
                            <!-- Making this false because otherwise the fleet gets disbanded if the commander is assigned to source. -->
                            <param name="assignSrc" value="false" />
                            <param name="incEgry" value="$fromShip_DefaultOrder.$incEgry" />
                            <param name="incFood" value="$fromShip_DefaultOrder.$incFood" />
                            <param name="supplyFirst" value="$fromShip_DefaultOrder.$supplyFirst" />
                            <param name="drugFree" value="$fromShip_DefaultOrder.$drugFree" />
                            <param name="drugMule" value="$fromShip_DefaultOrder.$drugMule" />
                            <param name="twoWay" value="$fromShip_DefaultOrder.$twoWay" />
                            <param name="twoWaySupplyFirst" value="$fromShip_DefaultOrder.$twoWaySupplyFirst" />
                            <param name="forbidTradeAll" value="$fromShip_DefaultOrder.$forbidTradeAll" />
                            <param name="allowLowVol" value="$fromShip_DefaultOrder.$allowLowVol" />
                            <param name="allowCreateTrade" value="$fromShip_DefaultOrder.$allowCreateTrade" />
                        </create_order>
                        <set_order_syncpoint_reached order="$toShip.order"/>
                    </do_elseif>
                    <do_elseif value="$fromShip_DefaultOrder.id == 'TravelMule'">
                        <!-- Mod Mules & Warehouses: Traveling Mule behavior -->
                        <create_order object="$toShip" id="'TravelMule'" default="true">
                            <param name="sourceStation" value="$fromShip_DefaultOrder.$sourceStation" />
                            <param name="tradeWithBig" value="$fromShip_DefaultOrder.$tradeWithBig" />
                            <param name="tradeWithAll" value="$fromShip_DefaultOrder.$tradeWithAll" />
                            <param name="maxDist" value="$fromShip_DefaultOrder.$maxDist" />
                            <param name="specialWareBasket" value="$fromShip_DefaultOrder.$specialWareBasket" />
                            <param name="destList" value="$fromShip_DefaultOrder.$destList" />
                        </create_order>
                        <set_order_syncpoint_reached order="$toShip.order"/>
                    </do_elseif>
                    <do_elseif value="$fromShip_DefaultOrder.id == 'RandomTrade'" chance="0">
                        <!-- RandomTrade fleet -->
                        <!-- RandomTrade also has their own "assignment skill level"; updating the variable to reflect that. -->
                        <set_value name="$assignmentSkillLevel" exact="[$fromShip.pilot.skill.management, $toShip.pilot.skill.piloting].max * 2" />
                        <set_value name="$maxBuy" exact="[$fromShip_DefaultOrder.$maxBuy, $assignmentSkillLevel].min" />
                        <set_value name="$maxSell" exact="[$fromShip_DefaultOrder.$maxSell, $assignmentSkillLevel].min" />

                        <create_order object="$toShip" id="'RandomTrade'" default="true">
                            <!-- Section 1: basic parameters -->
                            <param name="home" value="$fromShip_DefaultOrder.$home" />
                            <param name="homeBound" value="$fromShip_DefaultOrder.$homeBound" />
                            <param name="maxBuy" value="$maxBuy" />
                            <param name="maxSell" value="$maxSell" />
                            <param name="bypass" value="$fromShip_DefaultOrder.$bypass" />
                            <param name="stationMode" value="$fromShip_DefaultOrder.$stationMode" />
                            <param name="forceOwn" value="$fromShip_DefaultOrder.$forceOwn" />
                            <!-- Section 2: ware baskets -->
                            <param name="wareBasket" value="$fromShip_DefaultOrder.$wareBasket" />
                            <param name="usePresets" value="$fromShip_DefaultOrder.$usePresets" />
                            <param name="allWares" value="$fromShip_DefaultOrder.$allWares" />
                            <param name="legalWares" value="$fromShip_DefaultOrder.$legalWares" />
                            <param name="illegalWares" value="$fromShip_DefaultOrder.$illegalWares" />
                            <param name="shipBuildingWares" value="$fromShip_DefaultOrder.$shipBuildingWares" />
                            <param name="stationBuildingWares" value="$fromShip_DefaultOrder.$stationBuildingWares" />
                            <param name="hightechWares" value="$fromShip_DefaultOrder.$hightechWares" />
                            <param name="refinedWares" value="$fromShip_DefaultOrder.$refinedWares" />
                            <param name="bioWares" value="$fromShip_DefaultOrder.$bioWares" />
                            <!-- Section 3: stock levels and profit levels -->
                            <param name="profitScale" value="$fromShip_DefaultOrder.$profitScale" />
                            <param name="stockRatioToBuy" value="$fromShip_DefaultOrder.$stockRatioToBuy" />
                            <param name="stockRatioToSell" value="$fromShip_DefaultOrder.$stockRatioToSell" />
                            <!-- Section 4: faction ban-lists -->
                            <param name="allowAllFactions" value="$fromShip_DefaultOrder.$allowAllFactions" />
                            <param name="allowPlayer" value="$fromShip_DefaultOrder.$allowPlayer" />
                            <param name="allowArgon" value="$fromShip_DefaultOrder.$allowArgon" />
                            <param name="allowAntigone" value="$fromShip_DefaultOrder.$allowAntigone" />
                            <param name="allowTeladi" value="$fromShip_DefaultOrder.$allowTeladi" />
                            <param name="allowMinistry" value="$fromShip_DefaultOrder.$allowMinistry" />
                            <param name="allowParanid" value="$fromShip_DefaultOrder.$allowParanid" />
                            <param name="allowHolyOrder" value="$fromShip_DefaultOrder.$allowHolyOrder" />
                            <param name="allowAlliance" value="$fromShip_DefaultOrder.$allowAlliance" />
                            <param name="allowHatikvah" value="$fromShip_DefaultOrder.$allowHatikvah" />
                            <param name="allowScaleplate" value="$fromShip_DefaultOrder.$allowScaleplate" />
                        </create_order>
                        <set_order_syncpoint_reached order="$toShip.order"/>

                        <!-- Out of scope variable removal -->
                        <remove_value name="$maxBuy" />
                        <remove_value name="$maxSell" />
                    </do_elseif>
                    <do_else>
                        <!-- Fallback case: probably an incorrect assignment. -->
                        <!-- The player is responsible for checking the correctness of assignments and make corrections. -->
                        <create_order object="$object" id="'Follow'" default="true">
                            <param name="target" value="$commander" />
                        </create_order>
                    </do_else>
                </do_elseif>
                <do_else>
                    <debug_text text="'Assignment unrecognized by CivFleet. Cancelling sync from ' + $fromShip.knownname + ' (' + $fromShip + ') to ' + $toShip.knownname + ' (' + $toShip + ') via assignment ' + $toShip.assignment + '.'" />
                </do_else>

                <!-- Out of scope variable removal -->
                <remove_value name="$fromShip" />
                <remove_value name="$toShip" />
                <remove_value name="$assignmentSkillLevel" />
                <remove_value name="$fromShip_DefaultOrder" />
                <remove_value name="$toShip_DefaultOrder" />
                <remove_value name="$haveSameDefaultOrder" />
            </actions>
        </cue>

        <!-- Given an order (more precisely, a defaultorder), determines if such order is a mining order. -->
        <!-- input: $inputOrder, output: $isMiningOrder -->
        <library name="CheckOrderIsMining">
            <actions>
                <set_value name="$isMiningOrder" exact="false" />
                <set_value name="$orderID" exact="$inputOrder.id" />
                <do_if value="$orderID != null">
                    <do_if value="$orderID == 'MiningRoutine' or $orderID == 'MiningRoutine_Basic' or $orderID == 'MiningRoutine_Advanced' or $orderID == 'MiningRoutine_Expert'">
                        <set_value name="$isMiningOrder" exact="true" />
                    </do_if>
                </do_if>
                <remove_value name="$orderID" />
                <remove_value name="$inputOrder" />
            </actions>
        </library>
    </cues>
</mdscript>